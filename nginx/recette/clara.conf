upstream rails_app {
	server clara_rails:3000;
}

limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=200r/m;

server {
	listen 80;
	server_name _;

	# define where Nginx should write its logs	
	access_log /var/log/nginx/ara_nginx.access.log;	
	error_log /var/log/nginx/ara_nginx.error.log;

	# deny requests for files that should never be accessed
	location ~ /\. {
		deny all;
	}

	location ~* ^.+\.(rb|log)$ {
		deny all;
	}

	location ^~ /apidocs
	{
		root /var/www/ara/current/public/;
	}

	location ~ ^/(assets)/	{
		root /var/www/ara/current/public/;
		gzip_static on; # to serve pre-gzipped version
		gzip_vary on; # Set Vary: Accept-Encoding Header
		expires max;
		add_header Cache-Control public;
	}

	# Intercept static ressources -> nginx
	location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|pdf|txt|tar|wav|bmp|rtf|js|flv|swf|html|htm)$
	{
		root /var/www/ara/current/public/;
	}

	error_page 404 /custom_404.html;
	location = /custom_404.html {
		root /usr/share/nginx/html;
		internal;
	}

	error_page 500 502 503 504 /custom_50x.html;
	location = /custom_50x.html {
		root /usr/share/nginx/html;
		internal;
	}

	# send non-static file requests to the app server
	location / {
		try_files $uri @rails_app;
	}

	location @rails_app {
		limit_conn conn_limit_per_ip 10; #Anti flood DDOS
		limit_req zone=req_limit_per_ip burst=10 nodelay; #Anti flood DDOS
		
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Ssl on; # Optional
		proxy_set_header X-Forwarded-Port $server_port;
		proxy_set_header X-Forwarded-Host $http_host;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_intercept_errors on;
		chunked_transfer_encoding on;
		proxy_pass http://rails_app;
	}
}
